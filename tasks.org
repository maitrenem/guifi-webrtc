* Tasks
** TODO Deliverables [0/4]
*** TODO Project Charter
**** DONE Motivation
**** DONE Objectives
**** TODO SWOT
**** TODO Scope
**** DONE Resources
**** TODO Planification
*** TODO Tasks and processes (gantt)
*** TODO Memory
- [ ] From 50 to 75 pages of content
**** TODO Documentation, sources of information
***** TODO Architecture and Deployment
**** Things to say/explain [13/28]
- [X] Documentation of Scrum
- [X] include pyramid explanation and work style in methodologies (inside tasks?)
- [X] "I wanted to do about VoIP (see next Chapter) but Miquel Oliver encouraged me to do about WebRTC, and he presented me Victor Pascual."
- [ ] Why is a disrupting technology WebRTC?
  - [ ] http://en.wikipedia.org/wiki/Disruptive_innovation#Disruptive_technology
  - [ ] http://searchunifiedcommunications.techtarget.com/tip/WebRTC-applications-could-disrupt-UC-market
  - [ ] Why is evolving WebRTC?
  - [ ] Why is changing the way ...?
- [ ] How WebRTC is changing everything
- [ ] [component selection] Signalling JSON is the best option (webrtchacks.com) but others are more complex (Sip ws, XMPP ws), and work good. There is no problem at all with signal. I prefer signalling servers that were working for years, that a new signalling server with JSON (argument against simplewebrtc, json signalling server? not standard?)
- [X] What is an ATA
- [ ] [network requirements?] Explain at least one topic using math formulation
- [ ] About QoS, how is done by Angel Elena, what said velazquezPFC
- [ ] What appendices, and detail them in Last part of Chapter 1, introduction
- [ ] Brief mention to IP-ranges Subnetting
- [X] Softphone
- [X] Security compromised in VPN-tunnels, where the true IP address of the user can be read. (in webrtc state of the art)
  - https://github.com/diafygi/webrtc-ips
  - https://torrentfreak.com/huge-security-flaw-leaks-vpn-users-real-ip-addresses-150130/
  - http://en.wikipedia.org/wiki/WebRTC#Concerns
- [ ] From the beginning arquitecture what should be applied to improve the basic use case in guifi
- [ ] move the generalizations and xmpp things and other things different than use case audio video call to introduction, conclusion
- [ ] case-based requirements inspired in this: http://uet.vnu.edu.vn/~chauttm/se2014/project/UseCaseRequirements.pdf
- [ ] classic guifi has the structure of internet (tree), but with 3 layers: interconnection with other zones, backbone of the zone and access network. New model mesh (viral) is only one layer/tier, but optionally one up (more high level routing), one down (access to user devices)
- [ ] communication fundamentals
  - [ ] request response http://en.wikipedia.org/wiki/Request%E2%80%93response
  - [ ] publish subscribe pattern http://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern
  - [ ] simplex, half duplex, full-duplex http://en.wikipedia.org/wiki/WebSocket
    - This is made possible by providing a standardized way for the server to send content to the browser without being solicited by the client, and allowing for messages to be passed back and forth while keeping the connection open
- [X] client server model
- [X] p2p model
- [X] QoS en WebRTC? (little mention)
- [X] SDP vs /JSON new format for SDP/
- [X] payload header protocol header. overhead http://en.wikipedia.org/wiki/Network_packet#Payload
- [ ] security in SIP (SDES) vs security in WebRTC (DTLS-SRTP or DTLS over STCP)
- [ ] (fundamentals?) architecture design (AIS, 1. Architectures.pdf)
  - [ ] network architecture
    - [ ] structure: nodes, connections, relationships
    - [ ] behavior: protocols, functionality
    - [ ] production and deployment plans
  - [ ] architecture features
    - [ ] centralization vs. distribution
    - [ ] open vs closed
    - [ ] availability
    - [ ] scalability
      - [ ] extendability
    - [ ] control
      - [ ] security
  - [ ] network architectures (guifi)
  - [ ] signalling types
- [X] put to each protocol its RFC?
- [X] http proxy alpn (guifi.net)
- [ ] Annex
  - [ ] Rewrite rule of apache for websockets
  - [ ] Installation and configuration of kamailio
    - with GUI??
***** RFC's
- [X] SRTP RFC 3711 (wikipedia)
***** Graphics
- [X] pyramid: requirements, design, implementation, poc
- [ ] do a diagram like this http://www.just2good.co.uk/images/gif/tcpipstack.gif explain
- [ ] what happens from WebRTC to SIP
- [ ] protocol stack diagram (gateway) http://www.slideshare.net/victorpascual/webrtc-standards-update-jul-2014/35/
- [ ] webrtc protocol stack: IP, UDP, SRTP
- [ ] flowchart
**** Parts to Fill
- [ ] every chapter should introduce the subparts
- [X] Chapter 1 Outline (1.3) has to be completed
- [X] 4.4.1 scrum plan, little introduction
**** Parts to Fix
- [ ] Fix: Graph, MEDIA CTRL -> ????
- [X] Fix: w-w graph, connection is not through data channel
- [ ] webrtc to webrtc diagram, is not datachannel communication what we use in that case
- [ ] bibliography, all RFC links are incorrect, should be like this, because it has updated information about obsolete or not https://tools.ietf.org/html/rfc2616
**** Questions
- [ ] What to use in the redaction of the memory: 1 or one, 2 or two?
- [ ] Gantt diagram is table or figure? 0> is a type of bar chart
- [ ] WebRTC codecs, is about video codecs, or also audio codecs?
**** Review
- [ ] Tasks, inside practice, WebRTC POC SCHEDULED: <2015-05-29 Fri>
**** Bibliography
***** Book SIP that I'm missing... (got the book)
***** RFC's
** TODO Metaorganization
1 month, 4 iterations
*** Milestones
- Definitive title of TFG and abstract <2015-05-25 Mon>
- Deliver complete memory <2015-06-12 Fri>
** TODO Theory
*** TODO Use cases and general documentation
**** TODO To be done [6/7]
- [X] [[file:doc/user-cases.org::*basic%20use%20case%20defined][Basic use case defined]] (bidirectional videoconference)
- [X] [[file:doc/webrtc-architecture.org::*Use%20case%20requeriments][Use case requeriments]] documented
- [ ] Definition, documentation and justification of the architecture (component selection, implementation, protocols, etc)
- [X] Demo POC that shows that it works as supposed [Works with a local tryit.jssip.net and RetroRTC only with firefox]
- [X] Requeriments to implement this in guifi (basic use case evolution)
- [X] Impact of new requeriments to the defined architecture
- [X] Proposal of architecture v2 (includes integration requirements)
**** TODO Read [2/6]
- [ ] Evaluate security features: the use of DTLS-SRTP is secure (vs ZRTP): https://webrtchacks.com/webrtc-must-implement-dtls-srtp-but-must-not-implement-sdes
- [-] State of the art [1/5]
  - [X] https://wiki.debian.org/UnifiedCommunications
  - [ ] http://www.rtcquickstart.org
  - [ ] http://www.opentelecoms.org
  - [ ] http://www.lumicall.org/
  - [ ] http://www.sip5060.net/
- [ ] Signalling that I want to use, SIP over Websockets: https://tools.ietf.org/html/rfc7118
- [X] http://ddd.uab.cat/record/70278?ln=ca. Comments I have: /It is more about server configuration. It's not studying with detail scalability, guifi integration, behaviour, benchmark in wireless networks/ Talks about LDAP
- [X] webrtc architecture: https://webrtchacks.com/signalling-options-for-webrtc-applications/
- [ ] https://prezi.com/qwejmltpng8x/webrtc/
**** webrtc articles
- [ ] https://webrtchacks.com/trickle-ice/
- [ ] https://webrtchacks.com/coturn/
- [ ] https://webrtchacks.com/javascript-dog-trainer/
**** dev reading
- [ ] http://www.html5rocks.com/en/tutorials/websockets/basics/
- [ ] http://www.html5rocks.com/en/tutorials/webrtc/basics/
- [ ] http://www.html5rocks.com/en/tutorials/webrtc/infrastructure/
- [ ] http://www.html5rocks.com/en/tutorials/webrtc/datachannels/
**** 
- [ ] understanding ice https://webrtchacks.com/trickle-ice/
- [ ] interconnectivity webrtc with ims https://webrtchacks.com/ims-approach-webrtc/
  - [ ] http://www.slideshare.net/victorpascual/webrtc-standards-update-jul-2014/34/
** TODO Practice
*** TODO WebRTC POC (Proof of Concept)
- [ ] Understand how it works
- [-] Modify appropiately to run in my own server (several demos)
  - [X] RetroRTC (sip)
  - [X] tryit.jssip.net (sip)
  - [X] JsCommunicator(sip)
  - [ ] Candy Chat (xmpp)
  - [ ] Jappix (xmpp)
  - [ ] Conversejs (xmpp)
*** TODO Tested Components
- [ ] SIP Proxies
  - [ ] Kamailio
    - [ ] TLS
    - [ ] LDAP
    - [ ] RTPProxy
  - [ ] Resiprocate
    - [ ] TLS
    - [ ] LDAP
    - [ ] RTPProxy
    - [ ] STUN
    - [ ] TURN
- [ ] XMPP Servers
  - [ ] Prosody LDAP
  - [ ] Ejabberd LDAP
  - [ ] Metronome LDAP
*** TODO Develop DNS (NAPTR, SRV) for guifi.net
- [X] prepare guifi.net development environment
- [ ] coding guifi dnsservices
- [ ] coding guifi module
